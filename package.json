{
  "name": "probation-search-ui",
  "version": "0.0.1",
  "description": "Probation Search",
  "repository": "git@github.com:ministryofjustice/probation-search-ui.git",
  "license": "MIT",
  "scripts": {
    "copy-views": "cp -R server/views dist/server/",
    "compile-sass": "sass --quiet-deps --no-source-map --load-path=node_modules/govuk-frontend/dist --load-path=node_modules/@ministryofjustice/frontend --load-path=. assets/scss/application.scss:./assets/stylesheets/application.css assets/scss/new-tech.scss:./assets/stylesheets/new-tech.css --style compressed",
    "watch-ts": "tsc -w",
    "watch-views": "nodemon --watch server/views -e html,njk -x npm run copy-views",
    "watch-node": "DEBUG=gov-starter-server* nodemon -r dotenv/config --inspect --watch dist/ dist/server.js | bunyan -o short",
    "watch-sass": "npm run compile-sass -- --watch",
    "build": "npm run compile-sass && tsc && npm run copy-views",
    "start": "node $NODE_OPTIONS dist/server.js | bunyan -o short",
    "start:dev": "concurrently -k -p \"[{name}]\" -n \"Views,TypeScript,Node,Sass\" -c \"yellow.bold,cyan.bold,green.bold,blue.bold\" \"npm run watch-views\" \"npm run watch-ts\" \"npm run watch-node\" \"npm run watch-sass\"",
    "start-feature": "concurrently -k -p \"[{name}]\" -n \"WireMock,Node\" -c \"magenta.bold,green.bold\" \"npm run wiremock\" \"npm run start-node-feature\"",
    "start-feature:dev": "concurrently -k -p \"[{name}]\" -n \"WireMock,Views,TypeScript,Node,Sass\" -c \"magenta.bold,yellow.bold,cyan.bold,green.bold,blue.bold\" \"npm run wiremock\" \"npm run watch-views\" \"npm run watch-ts\" \"npm run watch-node-feature\" \"npm run watch-sass\"",
    "start-node-feature": "export $(cat feature.env) && node $NODE_DEBUG_OPTION dist/server.js | bunyan -o short",
    "watch-node-feature": "export $(cat feature.env) && nodemon --inspect --watch dist/ $NODE_DEBUG_OPTION dist/server.js | bunyan -o short",
    "wiremock": "npx wiremock --port 9091 --root-dir wiremock --local-response-templating",
    "lint": "eslint . --cache --max-warnings 0",
    "lint:fix": "eslint . --cache --max-warnings 0 --fix",
    "typecheck": "tsc && tsc -p integration_tests",
    "test": "jest",
    "test:ci": "jest --runInBand",
    "security_audit": "npx audit-ci --config audit-ci.json",
    "int-test": "cypress run --config video=false",
    "int-test-ui": "cypress open --e2e",
    "clean": "rm -rf dist build node_modules stylesheets"
  },
  "engines": {
    "node": "^22",
    "npm": "^10"
  },
  "jest": {
    "transform": {
      "^.+\\.tsx?$": [
        "ts-jest",
        {
          "isolatedModules": true
        }
      ]
    },
    "collectCoverageFrom": [
      "server/**/*.{ts,js,jsx,mjs}"
    ],
    "testMatch": [
      "<rootDir>/(server|job)/**/?(*.)(cy|test).{ts,js,jsx,mjs}"
    ],
    "testEnvironment": "node",
    "reporters": [
      "default",
      [
        "jest-junit",
        {
          "outputDirectory": "test_results/jest/"
        }
      ],
      [
        "./node_modules/jest-html-reporter",
        {
          "outputPath": "test_results/unit-test-reports.html"
        }
      ]
    ],
    "moduleFileExtensions": [
      "web.js",
      "js",
      "json",
      "node",
      "ts"
    ]
  },
  "nodemonConfig": {
    "ignore": [
      ".circleci/*",
      "migrations/*",
      "node_modules/*",
      "test/*",
      "integration_tests/*"
    ],
    "delay": 2500,
    "ext": "js,json,html,njk",
    "env": {
      "LIVE_RELOAD": "true"
    }
  },
  "lint-staged": {
    "*.{ts,js,css}": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.json": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "@ministryofjustice/frontend": "^4.0.1",
    "@ministryofjustice/hmpps-audit-client": "^1.1.1",
    "@ministryofjustice/probation-search-frontend": "^2.3.0",
    "@sentry/node": "^9.12.0",
    "agentkeepalive": "^4.6.0",
    "applicationinsights": "^2.9.5",
    "body-parser": "^2.2.0",
    "bunyan": "^1.8.15",
    "bunyan-format": "^0.2.1",
    "compression": "^1.8.0",
    "connect-flash": "^0.1.1",
    "connect-redis": "^8.0.2",
    "csurf": "^1.11.0",
    "date-fns": "^4.1.0",
    "express": "^5.1.0",
    "express-prom-bundle": "^8.0.0",
    "express-session": "^1.18.1",
    "govuk-frontend": "^5.9.0",
    "helmet": "^8.1.0",
    "highlight-words-core": "^1.2.3",
    "http-errors": "^2.0.0",
    "jwt-decode": "^4.0.0",
    "nocache": "^4.0.0",
    "nunjucks": "^3.2.4",
    "passport": "^0.7.0",
    "passport-oauth2": "^1.8.0",
    "prom-client": "^15.1.3",
    "redis": "^4.7.0",
    "superagent": "^10.2.0",
    "url-value-parser": "^2.2.0",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@ministryofjustice/eslint-config-hmpps": "^0.0.1-beta.2",
    "@types/bunyan": "^1.8.11",
    "@types/bunyan-format": "^0.2.9",
    "@types/compression": "^1.7.5",
    "@types/connect-flash": "0.0.40",
    "@types/cookie-session": "^2.0.49",
    "@types/csurf": "^1.11.5",
    "@types/express-session": "^1.18.1",
    "@types/highlight-words-core": "^1.2.3",
    "@types/http-errors": "^2.0.4",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/node": "^20.14.12",
    "@types/nunjucks": "^3.2.6",
    "@types/parseurl": "^1.3.3",
    "@types/passport": "^1.0.17",
    "@types/passport-oauth2": "^1.4.17",
    "@types/superagent": "^8.1.9",
    "@types/supertest": "^6.0.3",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.29.1",
    "@typescript-eslint/parser": "^8.29.1",
    "audit-ci": "^7.1.0",
    "concurrently": "^9.1.2",
    "cookie-session": "^2.1.0",
    "cypress": "^14.3.0",
    "cypress-multi-reporters": "^2.0.5",
    "dotenv": "^16.5.0",
    "jest": "^29.7.0",
    "jest-html-reporter": "^4.1.0",
    "jest-junit": "^16.0.0",
    "jsonwebtoken": "^9.0.2",
    "lint-staged": "^15.5.1",
    "mocha-junit-reporter": "^2.2.1",
    "nock": "^14.0.3",
    "nodemon": "^3.1.9",
    "prettier": "^3.5.3",
    "prettier-plugin-jinja-template": "^2.0.0",
    "sass": "^1.86.3",
    "supertest": "^7.1.0",
    "ts-jest": "^29.3.2",
    "typescript": "^5.8.3",
    "wiremock": "^3.12.1"
  },
  "overrides": {
    "csurf": {
      "cookie": "0.7.2"
    }
  }
}
